package com.mycompany.osapp3.entity;
// Generated 10/nov/2018 12:25:08 by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * EmployeeProject generated by hbm2java
 */
@Entity
@Table(name="employee_project"
    ,schema="public"
)
public class EmployeeProject  implements java.io.Serializable {


     private EmployeeProjectId id;
     private Employee employee;
     private Project project;
     private BigDecimal allocation;

    public EmployeeProject() {
    }

    public EmployeeProject(EmployeeProjectId id, Employee employee, Project project, BigDecimal allocation) {
       this.id = id;
       this.employee = employee;
       this.project = project;
       this.allocation = allocation;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="employeeId", column=@Column(name="employee_id", nullable=false) ), 
        @AttributeOverride(name="projectId", column=@Column(name="project_id", nullable=false) ) } )
    public EmployeeProjectId getId() {
        return this.id;
    }
    
    public void setId(EmployeeProjectId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="employee_id", nullable=false, insertable=false, updatable=false)
    public Employee getEmployee() {
        return this.employee;
    }
    
    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="project_id", nullable=false, insertable=false, updatable=false)
    public Project getProject() {
        return this.project;
    }
    
    public void setProject(Project project) {
        this.project = project;
    }

    
    @Column(name="allocation", nullable=false, precision=131089, scale=0)
    public BigDecimal getAllocation() {
        return this.allocation;
    }
    
    public void setAllocation(BigDecimal allocation) {
        this.allocation = allocation;
    }




}


